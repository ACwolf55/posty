import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard =()=>{
   
    const {user} = useUser()

    if (!user) return null

    return  (
      <div className="flex gap-3 w-full">
          <img src={user.profileImageUrl} alt="Profile image" className="w-14 h-14 rounded-full"/>
      <input placeholder="post your posty post here ~!" className="bg-transparent grow"/>

      </div>
    )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView =(props : PostWithUser)=>{
  const {post,author} = props
return(
  <div className="p-8 border-b border-slate-400" key={post.id}>
    {post.content}
    </div>
)
}  

const Home: NextPage = () => {

  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const user = useUser()
  const {data, isLoading} = api.posts.getAll.useQuery();

  if(isLoading) return <div>Loading...</div>

  if(!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
      
      <div className="h-full w-full md:max-w-2xl border-x border-slate-400">
    <div className="flex border-b border-slate-400 p-4">
      {!user.isSignedIn && 
      <div className="flex justify-center"><SignInButton /></div>}
      {user.isSignedIn && <CreatePostWizard />}
      </div>
      <div className='flex flex-col'>
       {[...data, ...data]?.map((fullPost)=> (
        <PostView {...fullPost} key={fullPost.post.id} />
       ))}
      </div>
    </div>

      </main>
    </>
  );
};

export default Home;
